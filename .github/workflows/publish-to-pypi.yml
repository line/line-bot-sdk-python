# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to release'
        required: true

jobs:
  release-build:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        submodules: true
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Update version in linebot/__about__.py
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION=${{ github.event.inputs.version }}
        else
          VERSION=${{ github.event.release.tag_name }}
        fi

        VERSION=${VERSION#v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        python tools/update_version.py $VERSION
    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - name: upload artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: release-dists
        path: dist/

    - name: Create GitHub Issue on Failure
      if: failure()
      uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7.1.0
      with:
        script: |
          const { owner, repo } = context.repo;
          const version = process.env.VERSION;
          const issueTitle = `Release job for ${version} failed`;
          const issueBody = `The release job failed. Please check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.`;
          const assignees = [context.actor];

          await github.rest.issues.create({
            owner,
            repo,
            title: issueTitle,
            body: issueBody,
            assignees
          });

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    environment:
      name: release
    permissions:
      id-token: write
      issues: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0

      - name: Create GitHub Issue on Failure
        if: failure()
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # v7.1.0
        with:
          script: |
            const { owner, repo } = context.repo;
            const issueTitle = `Release job for failed`;
            const issueBody = `The release job failed. Please check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.`;
            const assignees = [context.actor];
            
            await github.rest.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody,
              assignees
            });
