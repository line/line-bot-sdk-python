# coding: utf-8

"""
    Channel Access Token API

    This document describes Channel Access Token API.  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List
from pydantic.v1 import BaseModel, Field, StrictStr, conlist

class ChannelAccessTokenKeyIdsResponse(BaseModel):
    """
    Channel access token key IDs
    https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1
    """
    kids: conlist(StrictStr) = Field(..., description="Array of channel access token key IDs.")

    __properties = ["kids"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ChannelAccessTokenKeyIdsResponse:
        """Create an instance of ChannelAccessTokenKeyIdsResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ChannelAccessTokenKeyIdsResponse:
        """Create an instance of ChannelAccessTokenKeyIdsResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ChannelAccessTokenKeyIdsResponse.parse_obj(obj)

        _obj = ChannelAccessTokenKeyIdsResponse.parse_obj({
            "kids": obj.get("kids")
        })
        return _obj

